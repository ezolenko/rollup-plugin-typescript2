{"version":3,"file":"rollup-plugin-typescript2.cjs.js","sources":["../src/context.ts","../src/rollupcontext.ts","../src/tsproxy.ts","../src/normalize.ts","../src/host.ts","../src/rollingcache.ts","../src/diagnostics-format-host.ts","../src/tscache.ts","../src/print-diagnostics.ts","../src/get-options-overrides.ts","../src/check-tsconfig.ts","../src/get-option-defaults.ts","../src/parse-tsconfig.ts","../src/tslib.ts","../src/index.ts"],"sourcesContent":["\nimport * as _ from \"lodash\";\n\nexport interface IRollupContext\n{\n\twarn(message: string): void;\n\terror(message: string): void;\n}\n\nexport interface IContext\n{\n\twarn(message: string | (() => string)): void;\n\terror(message: string | (() => string)): void;\n\tinfo(message: string | (() => string)): void;\n\tdebug(message: string | (() => string)): void;\n}\n\nexport enum VerbosityLevel\n{\n\tError = 0,\n\tWarning,\n\tInfo,\n\tDebug,\n}\n\nexport class ConsoleContext implements IContext\n{\n\tconstructor(private verbosity: VerbosityLevel, private prefix: string = \"\")\n\t{\n\t}\n\n\tpublic warn(message: string | (() => string)): void\n\t{\n\t\tif (this.verbosity < VerbosityLevel.Warning)\n\t\t\treturn;\n\t\tconsole.log(`${this.prefix}${_.isFunction(message) ? message() : message}`);\n\t}\n\n\tpublic error(message: string | (() => string)): void\n\t{\n\t\tif (this.verbosity < VerbosityLevel.Error)\n\t\t\treturn;\n\t\tconsole.log(`${this.prefix}${_.isFunction(message) ? message() : message}`);\n\t}\n\n\tpublic info(message: string | (() => string)): void\n\t{\n\t\tif (this.verbosity < VerbosityLevel.Info)\n\t\t\treturn;\n\t\tconsole.log(`${this.prefix}${_.isFunction(message) ? message() : message}`);\n\t}\n\n\tpublic debug(message: string | (() => string)): void\n\t{\n\t\tif (this.verbosity < VerbosityLevel.Debug)\n\t\t\treturn;\n\t\tconsole.log(`${this.prefix}${_.isFunction(message) ? message() : message}`);\n\t}\n}\n","import { IContext, IRollupContext, VerbosityLevel } from \"./context\";\nimport * as _ from \"lodash\";\n\nexport class RollupContext implements IContext\n{\n\tprivate hasContext: boolean = true;\n\n\tconstructor(private verbosity: VerbosityLevel, private bail: boolean, private context: IRollupContext, private prefix: string = \"\")\n\t{\n\t\tthis.hasContext = _.isFunction(this.context.warn) && _.isFunction(this.context.error);\n\t}\n\n\tpublic warn(message: string | (() => string)): void\n\t{\n\t\tif (this.verbosity < VerbosityLevel.Warning)\n\t\t\treturn;\n\n\t\tconst text = _.isFunction(message) ? message() : message;\n\n\t\tif (this.hasContext)\n\t\t\tthis.context.warn(`${text}`);\n\t\telse\n\t\t\tconsole.log(`${this.prefix}${text}`);\n\t}\n\n\tpublic error(message: string | (() => string)): void\n\t{\n\t\tif (this.verbosity < VerbosityLevel.Error)\n\t\t\treturn;\n\n\t\tconst text = _.isFunction(message) ? message() : message;\n\n\t\tif (this.hasContext)\n\t\t{\n\t\t\tif (this.bail)\n\t\t\t\tthis.context.error(`${text}`);\n\t\t\telse\n\t\t\t\tthis.context.warn(`${text}`);\n\t\t}\n\t\telse\n\t\t\tconsole.log(`${this.prefix}${text}`);\n\t}\n\n\tpublic info(message: string | (() => string)): void\n\t{\n\t\tif (this.verbosity < VerbosityLevel.Info)\n\t\t\treturn;\n\n\t\tconst text = _.isFunction(message) ? message() : message;\n\n\t\tconsole.log(`${this.prefix}${text}`);\n\t}\n\n\tpublic debug(message: string | (() => string)): void\n\t{\n\t\tif (this.verbosity < VerbosityLevel.Debug)\n\t\t\treturn;\n\n\t\tconst text = _.isFunction(message) ? message() : message;\n\n\t\tconsole.log(`${this.prefix}${text}`);\n\t}\n}\n","import * as tsTypes from \"typescript\";\n\nexport let tsModule: typeof tsTypes;\n\nexport function setTypescriptModule(override: typeof tsTypes)\n{\n\ttsModule = override;\n}\n","export function normalize(fileName: string)\n{\n\treturn fileName.split(\"\\\\\").join(\"/\");\n}\n","import { tsModule } from \"./tsproxy\";\nimport * as tsTypes from \"typescript\";\nimport { existsSync } from \"fs\";\nimport * as _ from \"lodash\";\nimport { normalize } from \"./normalize\";\n\nexport class LanguageServiceHost implements tsTypes.LanguageServiceHost\n{\n\tprivate cwd = process.cwd();\n\tprivate snapshots: { [fileName: string]: tsTypes.IScriptSnapshot } = {};\n\tprivate versions: { [fileName: string]: number } = {};\n\n\tconstructor(private parsedConfig: tsTypes.ParsedCommandLine)\n\t{\n\t}\n\n\tpublic reset()\n\t{\n\t\tthis.snapshots = {};\n\t\tthis.versions = {};\n\t}\n\n\tpublic setSnapshot(fileName: string, data: string): tsTypes.IScriptSnapshot\n\t{\n\t\tfileName = normalize(fileName);\n\n\t\tconst snapshot = tsModule.ScriptSnapshot.fromString(data);\n\t\tthis.snapshots[fileName] = snapshot;\n\t\tthis.versions[fileName] = (this.versions[fileName] || 0) + 1;\n\t\treturn snapshot;\n\t}\n\n\tpublic getScriptSnapshot(fileName: string): tsTypes.IScriptSnapshot | undefined\n\t{\n\t\tfileName = normalize(fileName);\n\n\t\tif (_.has(this.snapshots, fileName))\n\t\t\treturn this.snapshots[fileName];\n\n\t\tif (existsSync(fileName))\n\t\t{\n\t\t\tthis.snapshots[fileName] = tsModule.ScriptSnapshot.fromString(tsModule.sys.readFile(fileName)!);\n\t\t\tthis.versions[fileName] = (this.versions[fileName] || 0) + 1;\n\t\t\treturn this.snapshots[fileName];\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tpublic getCurrentDirectory()\n\t{\n\t\treturn this.cwd;\n\t}\n\n\tpublic getScriptVersion(fileName: string)\n\t{\n\t\tfileName = normalize(fileName);\n\n\t\treturn (this.versions[fileName] || 0).toString();\n\t}\n\n\tpublic getScriptFileNames()\n\t{\n\t\treturn this.parsedConfig.fileNames;\n\t}\n\n\tpublic getCompilationSettings(): tsTypes.CompilerOptions\n\t{\n\t\treturn this.parsedConfig.options;\n\t}\n\n\tpublic getDefaultLibFileName(opts: tsTypes.CompilerOptions)\n\t{\n\t\treturn tsModule.getDefaultLibFilePath(opts);\n\t}\n\n\tpublic useCaseSensitiveFileNames(): boolean\n\t{\n\t\treturn tsModule.sys.useCaseSensitiveFileNames;\n\t}\n\n\tpublic readDirectory(path: string, extensions?: string[], exclude?: string[], include?: string[]): string[]\n\t{\n\t\treturn tsModule.sys.readDirectory(path, extensions, exclude, include);\n\t}\n\n\tpublic readFile(path: string, encoding?: string): string | undefined\n\t{\n\t\treturn tsModule.sys.readFile(path, encoding);\n\t}\n\n\tpublic fileExists(path: string): boolean\n\t{\n\t\treturn tsModule.sys.fileExists(path);\n\t}\n\n\tpublic getTypeRootsVersion(): number\n\t{\n\t\treturn 0;\n\t}\n\n\tpublic directoryExists(directoryName: string): boolean\n\t{\n\t\treturn tsModule.sys.directoryExists(directoryName);\n\t}\n\n\tpublic getDirectories(directoryName: string): string[]\n\t{\n\t\treturn tsModule.sys.getDirectories(directoryName);\n\t}\n}\n","import { ICache } from \"./icache\";\nimport { emptyDirSync, ensureFileSync, readJsonSync, removeSync, writeJsonSync } from \"fs-extra\";\nimport { existsSync, readdirSync, renameSync } from \"fs\";\nimport * as _ from \"lodash\";\n\n/**\n * Saves data in new cache folder or reads it from old one.\n * Avoids perpetually growing cache and situations when things need to consider changed and then reverted data to be changed.\n */\nexport class RollingCache<DataType> implements ICache<DataType>\n{\n\tprivate oldCacheRoot: string;\n\tprivate newCacheRoot: string;\n\n\tprivate rolled: boolean = false;\n\n\t/**\n\t * @param cacheRoot: root folder for the cache\n\t * @param checkNewCache: whether to also look in new cache when reading from cache\n\t */\n\tconstructor(private cacheRoot: string, private checkNewCache: boolean)\n\t{\n\t\tthis.oldCacheRoot = `${this.cacheRoot}/cache`;\n\t\tthis.newCacheRoot = `${this.cacheRoot}/cache_`;\n\n\t\temptyDirSync(this.newCacheRoot);\n\t}\n\n\t/**\n\t * @returns true if name exist in old cache (or either old of new cache if checkNewCache is true)\n\t */\n\tpublic exists(name: string): boolean\n\t{\n\t\tif (this.rolled)\n\t\t\treturn false;\n\n\t\tif (this.checkNewCache && existsSync(`${this.newCacheRoot}/${name}`))\n\t\t\treturn true;\n\n\t\treturn existsSync(`${this.oldCacheRoot}/${name}`);\n\t}\n\n\tpublic path(name: string): string\n\t{\n\t\treturn `${this.oldCacheRoot}/${name}`;\n\t}\n\n\t/**\n\t * @returns true if old cache contains all names and nothing more\n\t */\n\tpublic match(names: string[]): boolean\n\t{\n\t\tif (this.rolled)\n\t\t\treturn false;\n\n\t\tif (!existsSync(this.oldCacheRoot))\n\t\t\treturn names.length === 0; // empty folder matches\n\n\t\treturn _.isEqual(readdirSync(this.oldCacheRoot).sort(), names.sort());\n\t}\n\n\t/**\n\t * @returns data for name, must exist in old cache (or either old of new cache if checkNewCache is true)\n\t */\n\tpublic read(name: string): DataType | null | undefined\n\t{\n\t\tif (this.checkNewCache && existsSync(`${this.newCacheRoot}/${name}`))\n\t\t\treturn readJsonSync(`${this.newCacheRoot}/${name}`, { encoding: \"utf8\", throws: false });\n\n\t\treturn readJsonSync(`${this.oldCacheRoot}/${name}`, { encoding: \"utf8\", throws: false });\n\t}\n\n\tpublic write(name: string, data: DataType): void\n\t{\n\t\tif (this.rolled)\n\t\t\treturn;\n\n\t\tif (data === undefined)\n\t\t\treturn;\n\n\t\twriteJsonSync(`${this.newCacheRoot}/${name}`, data);\n\t}\n\n\tpublic touch(name: string)\n\t{\n\t\tif (this.rolled)\n\t\t\treturn;\n\t\tensureFileSync(`${this.newCacheRoot}/${name}`);\n\t}\n\n\t/**\n\t * clears old cache and moves new in its place\n\t */\n\tpublic roll()\n\t{\n\t\tif (this.rolled)\n\t\t\treturn;\n\n\t\tthis.rolled = true;\n\t\tremoveSync(this.oldCacheRoot);\n\t\trenameSync(this.newCacheRoot, this.oldCacheRoot);\n\t}\n}\n","import * as path from \"path\";\nimport * as tsTypes from \"typescript\";\nimport { tsModule } from \"./tsproxy\";\n\nexport class FormatHost implements tsTypes.FormatDiagnosticsHost\n{\n\tpublic getCurrentDirectory(): string\n\t{\n\t\treturn tsModule.sys.getCurrentDirectory();\n\t}\n\n\tpublic getCanonicalFileName(fileName: string): string\n\t{\n\t\treturn path.normalize(fileName);\n\t}\n\n\tpublic getNewLine(): string\n\t{\n\t\treturn tsModule.sys.newLine;\n\t}\n}\n\nexport const formatHost = new FormatHost();\n","import { IContext } from \"./context\";\nimport { Graph, alg } from \"graphlib\";\nimport { sha1 } from \"object-hash\";\nimport { RollingCache } from \"./rollingcache\";\nimport { ICache } from \"./icache\";\nimport * as _ from \"lodash\";\nimport { tsModule } from \"./tsproxy\";\nimport * as tsTypes from \"typescript\";\nimport { blue, yellow, green } from \"colors/safe\";\nimport { emptyDirSync } from \"fs-extra\";\nimport { formatHost } from \"./diagnostics-format-host\";\n\nexport interface ICode\n{\n\tcode: string | undefined;\n\tmap: string | undefined;\n\tdts?: tsTypes.OutputFile | undefined;\n}\n\ninterface INodeLabel\n{\n\tdirty: boolean;\n}\n\nexport interface IDiagnostics\n{\n\tflatMessage: string;\n\tformatted: string;\n\tfileLine?: string;\n\tcategory: tsTypes.DiagnosticCategory;\n\tcode: number;\n\ttype: string;\n}\n\ninterface ITypeSnapshot\n{\n\tid: string;\n\tsnapshot: tsTypes.IScriptSnapshot | undefined;\n}\n\nexport function convertDiagnostic(type: string, data: tsTypes.Diagnostic[]): IDiagnostics[]\n{\n\treturn _.map(data, (diagnostic) =>\n\t{\n\t\tconst entry: IDiagnostics =\n\t\t\t{\n\t\t\t\tflatMessage: tsModule.flattenDiagnosticMessageText(diagnostic.messageText, \"\\n\"),\n\t\t\t\tformatted: tsModule.formatDiagnosticsWithColorAndContext(data, formatHost),\n\t\t\t\tcategory: diagnostic.category,\n\t\t\t\tcode: diagnostic.code,\n\t\t\t\ttype,\n\t\t\t};\n\n\t\tif (diagnostic.file && diagnostic.start !== undefined)\n\t\t{\n\t\t\tconst { line, character } = diagnostic.file.getLineAndCharacterOfPosition(diagnostic.start);\n\t\t\tentry.fileLine = `${diagnostic.file.fileName}(${line + 1},${character + 1})`;\n\t\t}\n\n\t\treturn entry;\n\t});\n}\n\nexport class TsCache\n{\n\tprivate cacheVersion = \"7\";\n\tprivate dependencyTree: Graph;\n\tprivate ambientTypes: ITypeSnapshot[];\n\tprivate ambientTypesDirty = false;\n\tprivate cacheDir: string;\n\tprivate codeCache!: ICache<ICode | undefined>;\n\tprivate typesCache!: ICache<string>;\n\tprivate semanticDiagnosticsCache!: ICache<IDiagnostics[]>;\n\tprivate syntacticDiagnosticsCache!: ICache<IDiagnostics[]>;\n\n\tconstructor(private host: tsTypes.LanguageServiceHost, cache: string, private options: tsTypes.CompilerOptions, private rollupConfig: any, rootFilenames: string[], private context: IContext)\n\t{\n\t\tthis.cacheDir = `${cache}/${sha1({\n\t\t\tversion: this.cacheVersion,\n\t\t\trootFilenames,\n\t\t\toptions: this.options,\n\t\t\trollupConfig: this.rollupConfig,\n\t\t\ttsVersion: tsModule.version,\n\t\t})}`;\n\n\t\tthis.dependencyTree = new Graph({ directed: true });\n\t\tthis.dependencyTree.setDefaultNodeLabel((_node: string) => ({ dirty: false }));\n\n\t\tconst automaticTypes = _.map(tsModule.getAutomaticTypeDirectiveNames(options, tsModule.sys), (entry) => tsModule.resolveTypeReferenceDirective(entry, undefined, options, tsModule.sys))\n\t\t\t.filter((entry) => entry.resolvedTypeReferenceDirective && entry.resolvedTypeReferenceDirective.resolvedFileName)\n\t\t\t.map((entry) => entry.resolvedTypeReferenceDirective!.resolvedFileName!);\n\n\t\tthis.ambientTypes = _.filter(rootFilenames, (file) => _.endsWith(file, \".d.ts\"))\n\t\t\t.concat(automaticTypes)\n\t\t\t.map((id) => ({ id, snapshot: this.host.getScriptSnapshot(id) }));\n\n\t\tthis.init();\n\n\t\tthis.checkAmbientTypes();\n\t}\n\n\tpublic clean()\n\t{\n\t\tthis.context.info(blue(`cleaning cache: ${this.cacheDir}`));\n\t\temptyDirSync(this.cacheDir);\n\n\t\tthis.init();\n\t}\n\n\tpublic setDependency(importee: string, importer: string): void\n\t{\n\t\t// importee -> importer\n\t\tthis.context.debug(`${blue(\"dependency\")} '${importee}'`);\n\t\tthis.context.debug(`    imported by '${importer}'`);\n\t\tthis.dependencyTree.setEdge(importer, importee);\n\t}\n\n\tpublic walkTree(cb: (id: string) => void | false): void\n\t{\n\t\tconst acyclic = alg.isAcyclic(this.dependencyTree);\n\n\t\tif (acyclic)\n\t\t{\n\t\t\t_.each(alg.topsort(this.dependencyTree), (id: string) => cb(id));\n\t\t\treturn;\n\t\t}\n\n\t\tthis.context.info(yellow(\"import tree has cycles\"));\n\n\t\t_.each(this.dependencyTree.nodes(), (id: string) => cb(id));\n\t}\n\n\tpublic done()\n\t{\n\t\tthis.context.info(blue(\"rolling caches\"));\n\t\tthis.codeCache.roll();\n\t\tthis.semanticDiagnosticsCache.roll();\n\t\tthis.syntacticDiagnosticsCache.roll();\n\t\tthis.typesCache.roll();\n\t}\n\n\tpublic getCompiled(id: string, snapshot: tsTypes.IScriptSnapshot, transform: () => ICode | undefined): ICode | undefined\n\t{\n\t\tconst name = this.makeName(id, snapshot);\n\n\t\tthis.context.info(`${blue(\"transpiling\")} '${id}'`);\n\t\tthis.context.debug(`    cache: '${this.codeCache.path(name)}'`);\n\n\t\tif (this.codeCache.exists(name) && !this.isDirty(id, false))\n\t\t{\n\t\t\tthis.context.debug(green(\"    cache hit\"));\n\t\t\tconst data = this.codeCache.read(name);\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tthis.codeCache.write(name, data);\n\t\t\t\treturn data;\n\t\t\t}\n\t\t\telse\n\t\t\t\tthis.context.warn(yellow(\"    cache broken, discarding\"));\n\t\t}\n\n\t\tthis.context.debug(yellow(\"    cache miss\"));\n\n\t\tconst transformedData = transform();\n\t\tthis.codeCache.write(name, transformedData);\n\t\tthis.markAsDirty(id);\n\t\treturn transformedData;\n\t}\n\n\tpublic getSyntacticDiagnostics(id: string, snapshot: tsTypes.IScriptSnapshot, check: () => tsTypes.Diagnostic[]): IDiagnostics[]\n\t{\n\t\treturn this.getDiagnostics(\"syntax\", this.syntacticDiagnosticsCache, id, snapshot, check);\n\t}\n\n\tpublic getSemanticDiagnostics(id: string, snapshot: tsTypes.IScriptSnapshot, check: () => tsTypes.Diagnostic[]): IDiagnostics[]\n\t{\n\t\treturn this.getDiagnostics(\"semantic\", this.semanticDiagnosticsCache, id, snapshot, check);\n\t}\n\n\tprivate checkAmbientTypes(): void\n\t{\n\t\tthis.context.debug(blue(\"Ambient types:\"));\n\t\tconst typeNames = _.filter(this.ambientTypes, (snapshot) => snapshot.snapshot !== undefined)\n\t\t\t.map((snapshot) =>\n\t\t\t{\n\t\t\t\tthis.context.debug(`    ${snapshot.id}`);\n\t\t\t\treturn this.makeName(snapshot.id, snapshot.snapshot!);\n\t\t\t});\n\t\t// types dirty if any d.ts changed, added or removed\n\t\tthis.ambientTypesDirty = !this.typesCache.match(typeNames);\n\n\t\tif (this.ambientTypesDirty)\n\t\t\tthis.context.info(yellow(\"ambient types changed, redoing all semantic diagnostics\"));\n\n\t\t_.each(typeNames, (name) => this.typesCache.touch(name));\n\t}\n\n\tprivate getDiagnostics(type: string, cache: ICache<IDiagnostics[]>, id: string, snapshot: tsTypes.IScriptSnapshot, check: () => tsTypes.Diagnostic[]): IDiagnostics[]\n\t{\n\t\tconst name = this.makeName(id, snapshot);\n\n\t\tthis.context.debug(`    cache: '${cache.path(name)}'`);\n\n\t\tif (cache.exists(name) && !this.isDirty(id, true))\n\t\t{\n\t\t\tthis.context.debug(green(\"    cache hit\"));\n\n\t\t\tconst data = cache.read(name);\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tcache.write(name, data);\n\t\t\t\treturn data;\n\t\t\t}\n\t\t\telse\n\t\t\t\tthis.context.warn(yellow(\"    cache broken, discarding\"));\n\t\t}\n\n\t\tthis.context.debug(yellow(\"    cache miss\"));\n\n\t\tconst convertedData = convertDiagnostic(type, check());\n\t\tcache.write(name, convertedData);\n\t\tthis.markAsDirty(id);\n\t\treturn convertedData;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis.codeCache = new RollingCache<ICode>(`${this.cacheDir}/code`, true);\n\t\tthis.typesCache = new RollingCache<string>(`${this.cacheDir}/types`, true);\n\t\tthis.syntacticDiagnosticsCache = new RollingCache<IDiagnostics[]>(`${this.cacheDir}/syntacticDiagnostics`, true);\n\t\tthis.semanticDiagnosticsCache = new RollingCache<IDiagnostics[]>(`${this.cacheDir}/semanticDiagnostics`, true);\n\t}\n\n\tprivate markAsDirty(id: string): void\n\t{\n\t\tthis.dependencyTree.setNode(id, { dirty: true });\n\t}\n\n\t// returns true if node or any of its imports or any of global types changed\n\tprivate isDirty(id: string, checkImports: boolean): boolean\n\t{\n\t\tconst label = this.dependencyTree.node(id) as INodeLabel;\n\n\t\tif (!label)\n\t\t\treturn false;\n\n\t\tif (!checkImports || label.dirty)\n\t\t\treturn label.dirty;\n\n\t\tif (this.ambientTypesDirty)\n\t\t\treturn true;\n\n\t\tconst dependencies = alg.dijkstra(this.dependencyTree, id);\n\n\t\treturn _.some(dependencies, (dependency, node) =>\n\t\t{\n\t\t\tif (!node || dependency.distance === Infinity)\n\t\t\t\treturn false;\n\n\t\t\tconst l = this.dependencyTree.node(node) as INodeLabel | undefined;\n\t\t\tconst dirty = l === undefined ? true : l.dirty;\n\n\t\t\tif (dirty)\n\t\t\t\tthis.context.debug(`    import changed: ${node}`);\n\n\t\t\treturn dirty;\n\t\t});\n\t}\n\n\tprivate makeName(id: string, snapshot: tsTypes.IScriptSnapshot)\n\t{\n\t\tconst data = snapshot.getText(0, snapshot.getLength());\n\t\treturn sha1({ data, id });\n\t}\n}\n","import { tsModule } from \"./tsproxy\";\nimport { red, white, yellow } from \"colors/safe\";\nimport { IContext } from \"./context\";\nimport { IDiagnostics } from \"./tscache\";\nimport * as _ from \"lodash\";\n\nexport function printDiagnostics(context: IContext, diagnostics: IDiagnostics[], pretty: boolean): void\n{\n\t_.each(diagnostics, (diagnostic) =>\n\t{\n\t\tlet print;\n\t\tlet color;\n\t\tlet category;\n\t\tswitch (diagnostic.category)\n\t\t{\n\t\t\tcase tsModule.DiagnosticCategory.Message:\n\t\t\t\tprint = context.info;\n\t\t\t\tcolor = white;\n\t\t\t\tcategory = \"\";\n\t\t\t\tbreak;\n\t\t\tcase tsModule.DiagnosticCategory.Error:\n\t\t\t\tprint = context.error;\n\t\t\t\tcolor = red;\n\t\t\t\tcategory = \"error\";\n\t\t\t\tbreak;\n\t\t\tcase tsModule.DiagnosticCategory.Warning:\n\t\t\tdefault:\n\t\t\t\tprint = context.warn;\n\t\t\t\tcolor = yellow;\n\t\t\t\tcategory = \"warning\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst type = diagnostic.type + \" \";\n\n\t\tif (pretty)\n\t\t\tprint.call(context, [`${diagnostic.formatted}`]);\n\t\telse\n\t\t{\n\t\t\tif (diagnostic.fileLine !== undefined)\n\t\t\t\tprint.call(context, [`${diagnostic.fileLine}: ${type}${category} TS${diagnostic.code} ${color(diagnostic.flatMessage)}`]);\n\t\t\telse\n\t\t\t\tprint.call(context, [`${type}${category} TS${diagnostic.code} ${color(diagnostic.flatMessage)}`]);\n\t\t}\n\t});\n}\n","import { tsModule } from \"./tsproxy\";\nimport * as tsTypes from \"typescript\";\nimport { IOptions } from \"./ioptions\";\nimport * as _ from \"lodash\";\n\nexport function getOptionsOverrides({ useTsconfigDeclarationDir }: IOptions, tsConfigJson?: any): tsTypes.CompilerOptions\n{\n\tconst overrides = {\n\t\tnoEmitHelpers: false,\n\t\timportHelpers: true,\n\t\tnoResolve: false,\n\t\tnoEmit: false,\n\t\toutDir: process.cwd(),\n\t\tmoduleResolution: tsModule.ModuleResolutionKind.NodeJs,\n\t};\n\n\tconst declaration = _.get(tsConfigJson, \"compilerOptions.declaration\", false);\n\n\tif (!declaration)\n\t\t(overrides as any).declarationDir = null;\n\tif (declaration && !useTsconfigDeclarationDir)\n\t\t(overrides as any).declarationDir = process.cwd();\n\n\treturn overrides;\n}\n","import { tsModule } from \"./tsproxy\";\nimport * as tsTypes from \"typescript\";\n\nexport function checkTsConfig(parsedConfig: tsTypes.ParsedCommandLine): void\n{\n\tconst module = parsedConfig.options.module;\n\n\tswitch (module)\n\t{\n\t\tcase tsModule.ModuleKind.ES2015:\n\t\tcase tsModule.ModuleKind.ESNext:\n\t\t\tbreak;\n\t\tcase undefined:\n\t\t\tthrow new Error(`Incompatible tsconfig option. Missing module option. This is incompatible with rollup, please use 'module: \"ES2015\"' or 'module: \"ESNext\"'.`);\n\t\tdefault:\n\t\t\tthrow new Error(`Incompatible tsconfig option. Module resolves to '${tsModule.ModuleKind[module]}'. This is incompatible with rollup, please use 'module: \"ES2015\"' or 'module: \"ESNext\"'.`);\n\t}\n}\n","export function getOptionsDefaults()\n{\n\treturn {\n\t\tcompilerOptions:\n\t\t{\n\t\t\tmodule: \"ES2015\",\n\t\t},\n\t};\n}\n","import { tsModule } from \"./tsproxy\";\nimport * as tsTypes from \"typescript\";\nimport { IContext } from \"./context\";\nimport { dirname } from \"path\";\nimport { printDiagnostics } from \"./print-diagnostics\";\nimport { convertDiagnostic } from \"./tscache\";\nimport { getOptionsOverrides } from \"./get-options-overrides\";\nimport { IOptions } from \"./ioptions\";\nimport * as _ from \"lodash\";\nimport { checkTsConfig } from \"./check-tsconfig\";\nimport { getOptionsDefaults } from \"./get-option-defaults\";\n\nexport function parseTsConfig(context: IContext, pluginOptions: IOptions): tsTypes.ParsedCommandLine\n{\n\tconst fileName = tsModule.findConfigFile(process.cwd(), tsModule.sys.fileExists, pluginOptions.tsconfig);\n\n\t// if the value was provided, but no file, fail hard\n\tif (pluginOptions.tsconfig !== undefined && !fileName)\n\t\tthrow new Error(`failed to open '${fileName}'`);\n\n\tlet loadedConfig: any = {};\n\tlet baseDir = process.cwd();\n\tlet configFileName;\n\tif (fileName)\n\t{\n\t\tconst text = tsModule.sys.readFile(fileName);\n\t\tif (text === undefined)\n\t\t\tthrow new Error(`failed to read '${fileName}'`);\n\n\t\tconst result = tsModule.parseConfigFileTextToJson(fileName, text);\n\n\t\tif (result.error !== undefined)\n\t\t{\n\t\t\tprintDiagnostics(context, convertDiagnostic(\"config\", [result.error]), _.get(result.config, \"pretty\", false));\n\t\t\tthrow new Error(`failed to parse '${fileName}'`);\n\t\t}\n\n\t\tloadedConfig = result.config;\n\t\tbaseDir = dirname(fileName);\n\t\tconfigFileName = fileName;\n\t}\n\n\tconst mergedConfig = {};\n\t_.merge(mergedConfig, getOptionsDefaults(), pluginOptions.tsconfigDefaults, loadedConfig, pluginOptions.tsconfigOverride);\n\n\tconst compilerOptionsOverride = getOptionsOverrides(pluginOptions, mergedConfig);\n\tconst parsedTsConfig = tsModule.parseJsonConfigFileContent(mergedConfig, tsModule.sys, baseDir, compilerOptionsOverride, configFileName);\n\n\tcheckTsConfig(parsedTsConfig);\n\n\tcontext.debug(`built-in options overrides: ${JSON.stringify(compilerOptionsOverride, undefined, 4)}`);\n\tcontext.debug(`parsed tsconfig: ${JSON.stringify(parsedTsConfig, undefined, 4)}`);\n\n\treturn parsedTsConfig;\n}\n","import { readFileSync } from \"fs\";\n\n// The injected id for helpers.\nexport const TSLIB = \"tslib\";\nexport let tslibSource: string;\ntry\n{\n\t// tslint:disable-next-line:no-string-literal no-var-requires\n\tconst tslibPath = require.resolve(\"tslib/\" + require(\"tslib/package.json\")[\"module\"]);\n\ttslibSource = readFileSync(tslibPath, \"utf8\");\n} catch (e)\n{\n\tconsole.warn(\"Error loading `tslib` helper library.\");\n\tthrow e;\n}\n","import { RollupContext } from \"./rollupcontext\";\nimport { ConsoleContext, IRollupContext, VerbosityLevel } from \"./context\";\nimport { LanguageServiceHost } from \"./host\";\nimport { TsCache, convertDiagnostic, ICode } from \"./tscache\";\nimport { tsModule, setTypescriptModule } from \"./tsproxy\";\nimport * as tsTypes from \"typescript\";\nimport * as resolve from \"resolve\";\nimport * as _ from \"lodash\";\nimport { IRollupOptions } from \"./irollup-options\";\nimport { IOptions } from \"./ioptions\";\nimport { Partial } from \"./partial\";\nimport { parseTsConfig } from \"./parse-tsconfig\";\nimport { printDiagnostics } from \"./print-diagnostics\";\nimport { TSLIB, tslibSource } from \"./tslib\";\nimport { blue, red, yellow } from \"colors/safe\";\nimport { dirname, isAbsolute, join, relative } from \"path\";\nimport { normalize } from \"./normalize\";\n\nexport default function typescript(options?: Partial<IOptions>)\n{\n\t// tslint:disable-next-line:no-var-requires\n\tconst createFilter = require(\"rollup-pluginutils\").createFilter;\n\t// tslint:enable-next-line:no-var-requires\n\tlet watchMode = false;\n\tlet generateRound = 0;\n\tlet rollupOptions: IRollupOptions;\n\tlet context: ConsoleContext;\n\tlet filter: any;\n\tlet parsedConfig: tsTypes.ParsedCommandLine;\n\tlet servicesHost: LanguageServiceHost;\n\tlet service: tsTypes.LanguageService;\n\tlet noErrors = true;\n\tconst declarations: { [name: string]: tsTypes.OutputFile } = {};\n\n\tlet _cache: TsCache;\n\tconst cache = (): TsCache =>\n\t{\n\t\tif (!_cache)\n\t\t\t_cache = new TsCache(servicesHost, pluginOptions.cacheRoot, parsedConfig.options, rollupOptions, parsedConfig.fileNames, context);\n\t\treturn _cache;\n\t};\n\n\tconst pluginOptions = { ...options } as IOptions;\n\n\t_.defaults(pluginOptions,\n\t\t{\n\t\t\tcheck: true,\n\t\t\tverbosity: VerbosityLevel.Warning,\n\t\t\tclean: false,\n\t\t\tcacheRoot: `${process.cwd()}/.rpt2_cache`,\n\t\t\tinclude: [\"*.ts+(|x)\", \"**/*.ts+(|x)\"],\n\t\t\texclude: [\"*.d.ts\", \"**/*.d.ts\"],\n\t\t\tabortOnError: true,\n\t\t\trollupCommonJSResolveHack: false,\n\t\t\ttypescript: require(\"typescript\"),\n\t\t\ttsconfig: undefined,\n\t\t\tuseTsconfigDeclarationDir: false,\n\t\t\ttsconfigOverride: {},\n\t\t\ttsconfigDefaults: {},\n\t\t});\n\n\tsetTypescriptModule(pluginOptions.typescript);\n\n\treturn {\n\n\t\tname: \"rpt2\",\n\n\t\toptions(config: IRollupOptions)\n\t\t{\n\t\t\trollupOptions = {... config};\n\t\t\tcontext = new ConsoleContext(pluginOptions.verbosity, \"rpt2: \");\n\n\t\t\tcontext.info(`typescript version: ${tsModule.version}`);\n\t\t\tcontext.info(`rollup-plugin-typescript2 version: $RPT2_VERSION`);\n\t\t\tcontext.debug(() => `plugin options:\\n${JSON.stringify(pluginOptions, (key, value) => key === \"typescript\" ? `version ${(value as typeof tsModule).version}` : value, 4)}`);\n\t\t\tcontext.debug(() => `rollup config:\\n${JSON.stringify(rollupOptions, undefined, 4)}`);\n\n\t\t\twatchMode = process.env.ROLLUP_WATCH === \"true\";\n\n\t\t\tif (watchMode)\n\t\t\t\tcontext.info(`running in watch mode`);\n\n\t\t\tparsedConfig = parseTsConfig(context, pluginOptions);\n\n\t\t\tif (parsedConfig.options.rootDirs)\n\t\t\t{\n\t\t\t\tconst included = _\n\t\t\t\t\t.chain(parsedConfig.options.rootDirs)\n\t\t\t\t\t.flatMap((root) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pluginOptions.include instanceof Array)\n\t\t\t\t\t\t\treturn pluginOptions.include.map((include) => join(root, include));\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn join(root, pluginOptions.include);\n\t\t\t\t\t})\n\t\t\t\t\t.uniq()\n\t\t\t\t\t.value();\n\n\t\t\t\tconst excluded = _\n\t\t\t\t\t.chain(parsedConfig.options.rootDirs)\n\t\t\t\t\t.flatMap((root) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (pluginOptions.exclude instanceof Array)\n\t\t\t\t\t\t\treturn pluginOptions.exclude.map((exclude) => join(root, exclude));\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn join(root, pluginOptions.exclude);\n\t\t\t\t\t})\n\t\t\t\t\t.uniq()\n\t\t\t\t\t.value();\n\n\t\t\t\tfilter = createFilter(included, excluded);\n\t\t\t\tcontext.debug(() => `included:\\n${JSON.stringify(included, undefined, 4)}`);\n\t\t\t\tcontext.debug(() => `excluded:\\n${JSON.stringify(excluded, undefined, 4)}`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfilter = createFilter(pluginOptions.include, pluginOptions.exclude);\n\t\t\t\tcontext.debug(() => `included:\\n'${JSON.stringify(pluginOptions.include, undefined, 4)}'`);\n\t\t\t\tcontext.debug(() => `excluded:\\n'${JSON.stringify(pluginOptions.exclude, undefined, 4)}'`);\n\t\t\t}\n\n\t\t\tservicesHost = new LanguageServiceHost(parsedConfig);\n\n\t\t\tservice = tsModule.createLanguageService(servicesHost, tsModule.createDocumentRegistry());\n\n\t\t\t// printing compiler option errors\n\t\t\tif (pluginOptions.check)\n\t\t\t\tprintDiagnostics(context, convertDiagnostic(\"options\", service.getCompilerOptionsDiagnostics()), parsedConfig.options.pretty === true);\n\n\t\t\tif (pluginOptions.clean)\n\t\t\t\tcache().clean();\n\t\t},\n\n\t\tresolveId(importee: string, importer: string)\n\t\t{\n\t\t\tif (importee === TSLIB)\n\t\t\t\treturn \"\\0\" + TSLIB;\n\n\t\t\tif (!importer)\n\t\t\t\treturn null;\n\n\t\t\timporter = importer.split(\"\\\\\").join(\"/\");\n\n\t\t\t// TODO: use module resolution cache\n\t\t\tconst result = tsModule.nodeModuleNameResolver(importee, importer, parsedConfig.options, tsModule.sys);\n\n\t\t\tif (result.resolvedModule && result.resolvedModule.resolvedFileName)\n\t\t\t{\n\t\t\t\tif (filter(result.resolvedModule.resolvedFileName))\n\t\t\t\t\tcache().setDependency(result.resolvedModule.resolvedFileName, importer);\n\n\t\t\t\tif (_.endsWith(result.resolvedModule.resolvedFileName, \".d.ts\"))\n\t\t\t\t\treturn null;\n\n\t\t\t\tconst resolved = pluginOptions.rollupCommonJSResolveHack\n\t\t\t\t\t? resolve.sync(result.resolvedModule.resolvedFileName)\n\t\t\t\t\t: result.resolvedModule.resolvedFileName;\n\n\t\t\t\tcontext.debug(() => `${blue(\"resolving\")} '${importee}'`);\n\t\t\t\tcontext.debug(() => `    to '${resolved}'`);\n\n\t\t\t\treturn resolved;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\n\t\tload(id: string): string | undefined\n\t\t{\n\t\t\tif (id === \"\\0\" + TSLIB)\n\t\t\t\treturn tslibSource;\n\n\t\t\treturn undefined;\n\t\t},\n\n\t\ttransform(this: IRollupContext, code: string, id: string): ICode | undefined\n\t\t{\n\t\t\tgenerateRound = 0; // in watch mode transform call resets generate count (used to avoid printing too many copies of the same error messages)\n\n\t\t\tif (!filter(id))\n\t\t\t\treturn undefined;\n\n\t\t\tconst contextWrapper = new RollupContext(pluginOptions.verbosity, pluginOptions.abortOnError, this, \"rpt2: \");\n\n\t\t\tconst snapshot = servicesHost.setSnapshot(id, code);\n\n\t\t\t// getting compiled file from cache or from ts\n\t\t\tconst result = cache().getCompiled(id, snapshot, () =>\n\t\t\t{\n\t\t\t\tconst output = service.getEmitOutput(id);\n\n\t\t\t\tif (output.emitSkipped)\n\t\t\t\t{\n\t\t\t\t\tnoErrors = false;\n\n\t\t\t\t\t// always checking on fatal errors, even if options.check is set to false\n\t\t\t\t\tconst diagnostics = _.concat(\n\t\t\t\t\t\tcache().getSyntacticDiagnostics(id, snapshot, () =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn service.getSyntacticDiagnostics(id);\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tcache().getSemanticDiagnostics(id, snapshot, () =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn service.getSemanticDiagnostics(id);\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tprintDiagnostics(contextWrapper, diagnostics, parsedConfig.options.pretty === true);\n\n\t\t\t\t\t// since no output was generated, aborting compilation\n\t\t\t\t\tcache().done();\n\t\t\t\t\tif (_.isFunction(this.error))\n\t\t\t\t\t\tthis.error(red(`failed to transpile '${id}'`));\n\t\t\t\t}\n\n\t\t\t\tconst transpiled = _.find(output.outputFiles, (entry) => _.endsWith(entry.name, \".js\") || _.endsWith(entry.name, \".jsx\"));\n\t\t\t\tconst map = _.find(output.outputFiles, (entry) => _.endsWith(entry.name, \".map\"));\n\t\t\t\tconst dts = _.find(output.outputFiles, (entry) => _.endsWith(entry.name, \".d.ts\"));\n\n\t\t\t\treturn {\n\t\t\t\t\tcode: transpiled ? transpiled.text : undefined,\n\t\t\t\t\tmap: map ? JSON.parse(map.text) : { mappings: \"\" },\n\t\t\t\t\tdts,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tif (pluginOptions.check)\n\t\t\t{\n\t\t\t\tconst diagnostics = _.concat(\n\t\t\t\t\tcache().getSyntacticDiagnostics(id, snapshot, () =>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn service.getSyntacticDiagnostics(id);\n\t\t\t\t\t}),\n\t\t\t\t\tcache().getSemanticDiagnostics(id, snapshot, () =>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn service.getSemanticDiagnostics(id);\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\tif (diagnostics.length > 0)\n\t\t\t\t\tnoErrors = false;\n\n\t\t\t\tprintDiagnostics(contextWrapper, diagnostics, parsedConfig.options.pretty === true);\n\t\t\t}\n\n\t\t\tif (result && result.dts)\n\t\t\t{\n\t\t\t\tconst key = normalize(id);\n\t\t\t\tdeclarations[key] = result.dts;\n\t\t\t\tcontext.debug(() => `${blue(\"generated declarations\")} for '${key}'`);\n\t\t\t\tresult.dts = undefined;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\n\t\tongenerate(): void\n\t\t{\n\t\t\tcontext.debug(() => `generating target ${generateRound + 1}`);\n\n\t\t\tif (watchMode && generateRound === 0)\n\t\t\t{\n\t\t\t\tcache().walkTree((id) =>\n\t\t\t\t{\n\t\t\t\t\tif (!filter(id))\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tconst diagnostics = _.concat(\n\t\t\t\t\t\tconvertDiagnostic(\"syntax\", service.getSyntacticDiagnostics(id)),\n\t\t\t\t\t\tconvertDiagnostic(\"semantic\", service.getSemanticDiagnostics(id)),\n\t\t\t\t\t);\n\n\t\t\t\t\tprintDiagnostics(context, diagnostics, parsedConfig.options.pretty === true);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!watchMode && !noErrors)\n\t\t\t\tcontext.info(yellow(\"there were errors or warnings.\"));\n\n\t\t\tcache().done();\n\n\t\t\tgenerateRound++;\n\t\t},\n\n\t\tonwrite({ dest, file }: IRollupOptions)\n\t\t{\n\t\t\tif (parsedConfig.options.declaration)\n\t\t\t{\n\t\t\t\t_.each(parsedConfig.fileNames, (name) =>\n\t\t\t\t{\n\t\t\t\t\tconst key = normalize(name);\n\t\t\t\t\tif (_.has(declarations, key) || !filter(key))\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcontext.debug(() => `generating missed declarations for '${key}'`);\n\t\t\t\t\tconst output = service.getEmitOutput(key, true);\n\t\t\t\t\tconst dts = _.find(output.outputFiles, (entry) => _.endsWith(entry.name, \".d.ts\"));\n\t\t\t\t\tif (dts)\n\t\t\t\t\t\tdeclarations[key] = dts;\n\t\t\t\t});\n\n\t\t\t\tconst bundleFile = file ? file : dest; // rollup 0.48+ has 'file' https://github.com/rollup/rollup/issues/1479\n\n\t\t\t\tconst baseDeclarationDir = parsedConfig.options.outDir;\n\t\t\t\t_.each(declarations, ({ name, text, writeByteOrderMark }, key) =>\n\t\t\t\t{\n\t\t\t\t\tlet writeToPath: string;\n\t\t\t\t\t// If for some reason no 'dest' property exists or if 'useTsconfigDeclarationDir' is given in the plugin options,\n\t\t\t\t\t// use the path provided by Typescript's LanguageService.\n\t\t\t\t\tif (!bundleFile || pluginOptions.useTsconfigDeclarationDir)\n\t\t\t\t\t\twriteToPath = name;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// Otherwise, take the directory name from the path and make sure it is absolute.\n\t\t\t\t\t\tconst destDirname = dirname(bundleFile);\n\t\t\t\t\t\tconst destDirectory = isAbsolute(bundleFile) ? destDirname : join(process.cwd(), destDirname);\n\t\t\t\t\t\twriteToPath = join(destDirectory, relative(baseDeclarationDir!, name));\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.debug(() => `${blue(\"writing declarations\")} for '${key}' to '${writeToPath}'`);\n\n\t\t\t\t\t// Write the declaration file to disk.\n\t\t\t\t\ttsModule.sys.writeFile(writeToPath, text, writeByteOrderMark);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t};\n}\n"],"names":["_.isFunction","_.has","existsSync","path","emptyDirSync","_.isEqual","readdirSync","readJsonSync","writeJsonSync","ensureFileSync","removeSync","renameSync","path.normalize","_.map","sha1","Graph","_.filter","_.endsWith","blue","alg","_.each","yellow","green","_.some","white","red","_.get","dirname","_.merge","readFileSync","tslib_1.__assign","_.defaults","_\r\n                    .chain","join","resolve.sync","_.concat","_.find","isAbsolute","relative"],"mappings":"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"}